<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.htf.mapper.RoleMapper">
    <!--开启二级缓存-->
    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
    <resultMap id="BaseResultMap" type="com.htf.entity.Role" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="parentId" property="parentId" jdbcType="VARCHAR" />
        <result column="principal" property="principal" jdbcType="VARCHAR" />
    </resultMap>
        <!--根据id查询用户详情-->
    <sql id="Base_Column_List" >
      id, name, description, parentId, principal
    </sql>
    <!--根据id查询用户详情-->
    <select id="selectByPrimaryKey" parameterType="string" resultType="com.htf.entity.Role">
        SELECT 
        <include refid="Base_Column_List" />
        FROM role WHERE id=#{id}
    </select>
    <update id="updateByPrimaryKey" parameterType="com.htf.entity.Role">
        update ROLE
        <set>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="principal != null">
                PRINCIPAL = #{principal,jdbcType=TINYINT},
            </if>
            <if test="description != null">
                DESCRIPTION = #{description,jdbcType=TINYINT},
            </if>
            <if test="parentId != null">
                PARENTID = #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="modifier != null">
                MODIFIER = #{modifier,jdbcType=TINYINT},
            </if>
            MODIFY_DATE = SYSDATE()
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <insert id="insert" parameterType="com.htf.entity.Role">
        insert into ROLE (ID, NAME,
        DESCRIPTION, PARENTID, PRINCIPAL,
        CREATE_DATE, CREATOR)
        values (#{id,jdbcType=VARCHAR}, #{name, jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{principal,jdbcType=VARCHAR},
        SYSDATE(), #{creator,jdbcType=VARCHAR})
    </insert>
    <delete id="deleteByPrimaryKey">
        DELETE  FROM ROLE WHERE id = #{id,jdbcType=VARCHAR}
    </delete>
    <select id="findByParentRole"  resultType="com.htf.entity.Role">
        SELECT
        <include refid="Base_Column_List" />
        FROM role WHERE PARENTID IS NULL
    </select>
    <select id="findRoleIsChild" parameterType="string" resultType="com.htf.entity.Role">
        SELECT
        <include refid="Base_Column_List" />
        FROM role WHERE PARENTID = #{parentId,jdbcType=VARCHAR}
    </select>
    <select id="findAllRole" parameterType="string" resultType="com.htf.entity.Role">
        SELECT
        <include refid="Base_Column_List" />
        FROM role
    </select>
</mapper>