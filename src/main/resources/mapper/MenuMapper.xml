<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.htf.mapper.MenuMapper">
    <!--开启二级缓存-->
    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
        <!--根据id查询用户详情-->
    <sql id="Base_Column_List" >
      id, name, type, title, `order`,parentId
    </sql>
    <!--根据id查询用户详情-->
    <select id="selectByPrimaryKey" parameterType="string" resultType="com.htf.entity.Menu">
        SELECT 
        <include refid="Base_Column_List" />
        FROM menu WHERE id=#{id}
    </select>
    <update id="updateByPrimaryKey" parameterType="com.htf.entity.Menu">
        update MENU
        <set>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                TITLE = #{title,jdbcType=TINYINT},
            </if>
            <if test="parentId != null">
                PARENTID = #{parentId,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                TYPE = #{type,jdbcType=VARCHAR},
            </if>
            <if test="modifier != null">
                MODIFIER = #{modifier,jdbcType=TINYINT},
            </if>
            MODIFY_DATE = SYSDATE()
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <insert id="insert" parameterType="com.htf.entity.Menu">
        insert into MENU (ID, NAME,PARENTID,
        TITLE,`ORDER`,TYPE,
        CREATE_DATE, CREATOR)
        values (#{id,jdbcType=VARCHAR}, #{name, jdbcType=VARCHAR},
        #{parentId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{order,jdbcType=VARCHAR},
        #{type,jdbcType=VARCHAR},SYSDATE(), #{creator,jdbcType=VARCHAR})
    </insert>
    <delete id="deleteByPrimaryKey">
        DELETE  FROM MENU WHERE id = #{id,jdbcType=VARCHAR}
    </delete>
    <select id="findByParentRole"  resultType="com.htf.entity.Menu">
        SELECT
        <include refid="Base_Column_List" />
        FROM role WHERE PARENTID IS NULL
    </select>
    <select id="findRoleIsChild" parameterType="string" resultType="com.htf.entity.Menu">
        SELECT
        <include refid="Base_Column_List" />
        FROM role WHERE PARENTID = #{parentId,jdbcType=VARCHAR}
    </select>
    <select id="findAllRole" parameterType="string" resultType="com.htf.entity.Menu">
        SELECT
        <include refid="Base_Column_List" />
        FROM role
    </select>
    <select id="findMaxOrderByParentId" parameterType="string" resultType="Integer">
        SELECT
        MAX(`ORDER`)
        FROM MENU
        <where>
            <if test="parentId != null">
                parentId = #{parentId,jdbcType=VARCHAR}
            </if>
            <if test="parentId == null">
                parentId is null
            </if>
        </where>
    </select>
    <select id="checkIncludeChild" parameterType="string" resultType="Integer">
        SELECT
        COUNT(ID)
        FROM MENU
        WHERE PARENTID = #{parentId,jdbcType=VARCHAR}
    </select>

    <select id="getPermissions" resultType="String">
        SELECT m.name
        FROM MENU m, ROLE_MENU_REL rm, USER_ROLE_REL ur
        WHERE m.id = rm.menu_id AND rm.role_id = ur.role_id
        AND ur.user_id = #{value}
        GROUP BY m.id
        UNION
        SELECT sm.name;
        FROM MENU m, ROLE_MENU_REL rm, USER_ROLE_REL ur, MENU sm
        WHERE m.id = rm.menu_id AND rm.role_id = ur.role_id AND m.parent_id = sm.id
        AND ur.user_id = #{value}
        GROUP BY sm.id
        UNION
        SELECT sm.name
        FROM MENU m, ROLE_MENU_REL rm, USER_ROLE_REL ur, MENU psm, MENU sm
        WHERE m.id = rm.menu_id AND rm.role_id = ur.role_id
        AND m.parent_id = psm.id AND psm.parent_id = sm.id
        AND ur.user_id = #{value}
        GROUP BY sm.id
    </select>

</mapper>